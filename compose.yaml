services:
  app:
    build: .
    environment:
      - 'spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/userDB'
      - 'management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans'
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    profiles:
      - with-app

  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=userDB'
      - 'POSTGRES_USER=dbUser'
      - 'POSTGRES_PASSWORD=dbPwd'

    volumes:
      - ./docker/initdb:/docker-entrypoint-initdb.d/
    ports:
      - '5432:5432'


  prometheus:
    image: prom/prometheus
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    volumes:
      - ./docker/datasources:/etc/grafana/provisioning/datasources:ro
      - ./docker/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"